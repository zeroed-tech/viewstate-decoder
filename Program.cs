using System.Text;
using System.Web;
using viewstate_decoder;

var viewstateHeader = new byte[] { 0xff, 0x01 };

var input = "";
var raw = false;
var urlEncoded = false;
if(urlEncoded)
{
    input = HttpUtility.UrlDecode(input);
}
var decoded = Convert.FromBase64String(input);
using var ms = new MemoryStream(decoded);

if (raw)
{
    BFDeserialise(ms);
    return;
}

var testHeader = new byte[2];
ms.ReadExactly(testHeader);
if (!viewstateHeader.SequenceEqual(testHeader))
{
    Console.Error.WriteLine("Invalid VIEWSTATE header, expected 0xFF01");
    return;
}

var t = ms.ReadByte();
switch (t)
{
    case 50:
        {
            int payloadSize = Utilities.Read7BitEndodedInt(ms);
            Console.WriteLine($"Payload is {payloadSize} bytes");
            byte[] bytes = new byte[payloadSize];
            ms.Read(bytes);
            using var payload = new MemoryStream(bytes);
            BFDeserialise(payload);
            byte[] remainder = new byte[ms.Length - ms.Position];
            ms.Read(remainder);

            StringBuilder sb = new StringBuilder();
            sb.AppendLine("Signature:");
            switch (remainder.Length)
            {
                case 20:
                    sb.Append("HMAC SHA1: "); break;
                case 32:
                    sb.Append("HMAC SHA256: "); break;
                default:
                    sb.Append("Unknown: "); break;
            }

            sb.Append(BitConverter.ToString(remainder).Replace("-", ""));
            Console.WriteLine(sb.ToString());
            break;
        }
    default: Console.Error.WriteLine($"Unhandled type {t}"); return;
}

void BFDeserialise(Stream stream)
{
    ObjectManager objectManager = new ObjectManager();
    while (stream.Position < stream.Length)
    {
        byte recordId = stream.Peek();
        
        Record p = RecordMap.GetRecordHandler(recordId);
        p.Parse(stream);
        
        p.AddToObjectGraph(objectManager);
        //Console.WriteLine(p);
    }
    //Console.WriteLine(objectManager);

}

